{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","isquestion","question","answer","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","map","elem","sort","Math","random","id","console","log","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f67ca3a.chunk.js","sourcesContent":["import './SingleCard.css';\n\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\n\tconst handleClick = () => {\n\t\tif (!disabled) {\n\t\t\thandleChoice(card);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className={flipped ? 'flipped' : ''}>\n\t\t\t\t<div className=\"front\">\n\t\t\t\t\t{card.isquestion ? <p>{card.question}</p> : <p>{card.answer}</p>}\n\t\t\t\t\t<img className=\"\" src={card.src} alt=\"card front\" />\n\t\t\t\t</div>\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"back\"\n\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/robocodebr/magic-memory/main/img/cover.png\"\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\talt=\"cover\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img1.gif',\n\t\tmatched: false,\n\t\tanswer: 'Від мінуса до плюса',\n\t\tquestion: 'В який бік рухається струм?'\n\t},\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img2.jpg',\n\t\tmatched: false,\n\t\tanswer: 'Від 0 до 1023',\n\t\tquestion: 'Яке значення може прийти на аналоговий порт?'\n\t},\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img3.jpg',\n\t\tmatched: false,\n\t\tanswer: 'Від 0 до 1',\n\t\tquestion: 'Яке значення може прийти на цифровий порт?'\n\t},\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img4.gif',\n\t\tmatched: false,\n\t\tanswer: 'Arduino',\n\t\tquestion: 'Яке називається платформа з якою ми працюємо?'\n\t},\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img5.gif',\n\t\tmatched: false,\n\t\tanswer: 'Максимальний вихідний струм виводу 3.3V · 50мА ',\n\t\tquestion: 'Який струм в Arduino?'\n\t},\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img6.jpg',\n\t\tmatched: false,\n\t\tanswer: 'setup',\n\t\tquestion: 'Яка функція спрацює в програмі першою?'\n\t},\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img7.jpg',\n\t\tmatched: false,\n\t\tanswer: '0,1/HIGH,LOW',\n\t\tquestion: 'Яке значення можна встановити в цифровий порт?'\n\t},\n\t{\n\t\tsrc: 'https://raw.githubusercontent.com/robocodebr/magic-arduino/main/img/img8.jpg',\n\t\tmatched: false,\n\t\tanswer: 'затримка, пауза',\n\t\tquestion: 'Як перекладається delay?'\n\t}\n];\n\nfunction App() {\n\tconst [ cards, setCards ] = useState([]);\n\tconst [ turns, setTurns ] = useState(0);\n\tconst [ choiceOne, setChoiceOne ] = useState(null);\n\tconst [ choiceTwo, setChoiceTwo ] = useState(null);\n\tconst [ disabled, setDisabled ] = useState(false);\n\n\t// shuffle cards for new game\n\tconst shuffleCards = () => {\n\t\tconst shuffledCards = [\n\t\t\t...cardImages.map((elem) => {\n\t\t\t\telem.isquestion = true;\n\t\t\t\treturn elem;\n\t\t\t}),\n\t\t\t...cardImages.map((elem) => {\n\t\t\t\telem.isquestion = false;\n\t\t\t\treturn elem;\n\t\t\t})\n\t\t]\n\t\t\t.sort(() => Math.random() - 0.5)\n\t\t\t.map((card) => ({ ...card, id: Math.random() }));\n\n\t\tsetChoiceOne(null);\n\t\tsetChoiceTwo(null);\n\t\tsetCards(shuffledCards);\n\t\tsetTurns(0);\n\t};\n\n\t// handle a choice\n\tconst handleChoice = (card) => {\n\t\tconsole.log(card);\n\t\tchoiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n\t};\n\n\t// compare 2 selected cards\n\tuseEffect(\n\t\t() => {\n\t\t\tif (choiceOne && choiceTwo) {\n\t\t\t\tsetDisabled(true);\n\n\t\t\t\tif (choiceOne.src === choiceTwo.src) {\n\t\t\t\t\tsetCards((prevCards) => {\n\t\t\t\t\t\treturn prevCards.map((card) => {\n\t\t\t\t\t\t\tif (card.src === choiceOne.src) {\n\t\t\t\t\t\t\t\treturn { ...card, matched: true };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn card;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tresetTurn();\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => resetTurn(), 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[ choiceOne, choiceTwo ]\n\t);\n\n\t// reset choices & increase turn\n\tconst resetTurn = () => {\n\t\tsetChoiceOne(null);\n\t\tsetChoiceTwo(null);\n\t\tsetTurns((prevTurns) => prevTurns + 1);\n\t\tsetDisabled(false);\n\t};\n\n\t// start new game automagically\n\tuseEffect(() => {\n\t\tshuffleCards();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Magic Match</h1>\n\t\t\t<button onClick={shuffleCards}>New Game</button>\n\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{cards.map((card) => (\n\t\t\t\t\t<SingleCard\n\t\t\t\t\t\tkey={card.id}\n\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\thandleChoice={handleChoice}\n\t\t\t\t\t\tflipped={card === choiceOne || card === choiceTwo || card.matched}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t<p>Turns: {turns}</p>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}